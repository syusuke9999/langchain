Index: docs/glossary.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/docs/glossary.md b/docs/glossary.md
--- a/docs/glossary.md	(revision 146616aa5d298f82763ebce77a1288c09fd3e6c4)
+++ b/docs/glossary.md	(date 1683738745962)
@@ -1,90 +1,89 @@
-# Glossary
+# 用語集
 
-This is a collection of terminology commonly used when developing LLM applications.
-It contains reference to external papers or sources where the concept was first introduced,
-as well as to places in LangChain where the concept is used.
+これは、LLMアプリケーションを開発する際に一般的に使用される用語の集まりです。
+概念が初めて紹介された外部の論文や資料への参照や、LangChainでその概念が使用されている場所への参照が含まれています。
 
-## Chain of Thought Prompting
+## 思考の連鎖プロンプト
 
-A prompting technique used to encourage the model to generate a series of intermediate reasoning steps.
-A less formal way to induce this behavior is to include “Let’s think step-by-step” in the prompt.
+モデルに中間的な推論ステップの一連の生成を促すプロンプト技術。
+この挙動を誘発するための簡単な方法として、プロンプトに「ステップ・バイ・ステップで考えてみましょう」と含めることができます。
 
-Resources:
+リソース:
 
 - [Chain-of-Thought Paper](https://arxiv.org/pdf/2201.11903.pdf)
 - [Step-by-Step Paper](https://arxiv.org/abs/2112.00114)
 
-## Action Plan Generation
+## アクションプラン生成
 
-A prompt usage that uses a language model to generate actions to take.
-The results of these actions can then be fed back into the language model to generate a subsequent action.
+言語モデルを使用してアクションを生成するプロンプトの使用法。
+これらのアクションの結果は、言語モデルにフィードバックされ、次のアクションを生成するために使用されます。
 
-Resources:
+リソース:
 
 - [WebGPT Paper](https://arxiv.org/pdf/2112.09332.pdf)
 - [SayCan Paper](https://say-can.github.io/assets/palm_saycan.pdf)
 
-## ReAct Prompting
+## ReActプロンプト
 
-A prompting technique that combines Chain-of-Thought prompting with action plan generation.
-This induces the to model to think about what action to take, then take it.
+思考の連鎖プロンプトとアクションプラン生成を組み合わせたプロンプト技術。
+これにより、モデルはどのアクションを取るべきかを考え、そのアクションを実行するようになります。
 
-Resources:
+リソース:
 
 - [Paper](https://arxiv.org/pdf/2210.03629.pdf)
 - [LangChain Example](modules/agents/agents/examples/react.ipynb)
 
 ## Self-ask
 
-A prompting method that builds on top of chain-of-thought prompting.
-In this method, the model explicitly asks itself follow-up questions, which are then answered by an external search engine.
+思考の連鎖プロンプトをベースにしたプロンプト方法。
+この方法では、モデルが自分自身にフォローアップの質問を明示的にし、それらの質問には外部の検索エンジンが答える。
 
-Resources:
+リソース:
 
 - [Paper](https://ofir.io/self-ask.pdf)
 - [LangChain Example](modules/agents/agents/examples/self_ask_with_search.ipynb)
 
-## Prompt Chaining
+## プロンプトチェーン
 
-Combining multiple LLM calls together, with the output of one-step being the input to the next.
+複数のLLM呼び出しを組み合わせ、1つのステップの出力が次のステップの入力になるようにする。
 
-Resources:
+リソース:
 
 - [PromptChainer Paper](https://arxiv.org/pdf/2203.06566.pdf)
 - [Language Model Cascades](https://arxiv.org/abs/2207.10342)
 - [ICE Primer Book](https://primer.ought.org/)
 - [Socratic Models](https://socraticmodels.github.io/)
 
-## Memetic Proxy
+## メメティックプロキシ
 
-Encouraging the LLM to respond in a certain way framing the discussion in a context that the model knows of and that will result in that type of response. For example, as a conversation between a student and a teacher.
+LLMに特定の方法で応答するように促すために、モデルが知っているコンテキストで議論をフレームし、そのタイプの応答が得られるようにする。例えば、生徒と先生の間の会話として。
 
-Resources:
+リソース:
 
 - [Paper](https://arxiv.org/pdf/2102.07350.pdf)
 
-## Self Consistency
+## 自己整合性
 
-A decoding strategy that samples a diverse set of reasoning paths and then selects the most consistent answer.
-Is most effective when combined with Chain-of-thought prompting.
+多様な推論パスのサンプルを取り、最も整合性のある回答を選択するデコーディング戦略。
+思考の連鎖プロンプトと組み合わせることで最も効果的です。
 
-Resources:
+リソース:
 
 - [Paper](https://arxiv.org/pdf/2203.11171.pdf)
 
-## Inception
+## インセプション
 
-Also called “First Person Instruction”.
-Encouraging the model to think a certain way by including the start of the model’s response in the prompt.
+「ファーストパーソンインストラクション」とも呼ばれます。
+プロンプトにモデルの応答の開始部分を含めることで、モデルが特定の方法で考えるように促します。
 
-Resources:
+リソース:
 
 - [Example](https://twitter.com/goodside/status/1583262455207460865?s=20&t=8Hz7XBnK1OF8siQrxxCIGQ)
 
 ## MemPrompt
 
-MemPrompt maintains a memory of errors and user feedback, and uses them to prevent repetition of mistakes.
+MemPromptは、エラーやユーザーフィードバックのメモリを維持し、それらを使用してミスの繰り返しを防ぎます。
 
-Resources:
+リソース:
 
 - [Paper](https://memprompt.com/)
